name: Quality Assurance

on:
    push:
        branches:
            - main
        tags:
            - "v*.*.*"
    pull_request:
        branches:
            - main

jobs:
    check-tag-from-main-branch:
        runs-on: ubuntu-20.04
        if: startsWith(github.ref, 'refs/tags/v')
        steps:
            -   uses: actions/checkout@v4.1.1
            -   name: Check if tag is on main branch
                run: |
                    if [[ $(git branch --contains ${{ github.ref }}) =~ "main" ]]; then
                        echo "Tag is on main branch"
                    else
                        echo "Tag is not on main branch"
                        exit 1
                    fi
    check-version-already-exist:
        runs-on: ubuntu-20.04
        if: startsWith(github.ref, 'refs/tags/v')
        steps:
            -   uses: actions/checkout@v4.1.1
            -   name: Check if version already exists
                run: |
                    PACKAGE_VERSION=$(poetry version -s)
                    STATUS_CODE=$(curl -o /dev/null -s -w "%{http_code}\n" https://pypi.org/project/dddesign/$PACKAGE_VERSION/)
                    if [ "$STATUS_CODE" -eq 200 ]; then
                        echo "Version $PACKAGE_VERSION already exists"
                        exit 1
                    else
                        echo "Version $PACKAGE_VERSION doesn't exists"
                    fi
    linters:
        runs-on: ubuntu-20.04
        steps:
            -   uses: actions/checkout@v4.1.1
            -   name: Set up Python
                uses: actions/setup-python@v5.1.0
                with:
                    python-version: 3.10.4
            -   name: Install Poetry
                uses: snok/install-poetry@v1.3.4
                with:
                    version: 1.5.0
                    virtualenvs-create: false
            -   name: Install dependencies
                run: poetry install
            -   name: Ruff Linter
                run: ruff . --config ruff.toml
            -   name: Ruff Format Linter
                run: ruff format . --check --config ruff.toml
            -   name: Mypy Linter
                run: mypy --config mypy.toml
    tests:
        runs-on: ubuntu-20.04
        strategy:
            matrix:
                python-version: [ "3.8", "3.9", "3.10" ]
                pydantic-version: [ "1.10" ]
        steps:
            -   uses: actions/checkout@v4.1.1
            -   name: Set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v5.1.0
                with:
                    python-version: ${{ matrix.python-version }}
            -   name: Install Pydantic ${{ matrix.pydantic-version }}
                run: pip install pydantic==${{ matrix.pydantic-version }}
            -   name: Install Pytest
                run: pip install pytest==8.1.1
            -   name: Tests
                run: pytest
