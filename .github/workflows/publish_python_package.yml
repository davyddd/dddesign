name: Publish Python Package

on:
    push:
        tags:
            - "v*.*.*"

jobs:
    check-tag-from-main-branch:
        runs-on: ubuntu-24.04
        steps:
            -   uses: actions/checkout@v4.1.1
            -   name: Check if tag is on main branch
                run: |
                    git fetch origin main
                    if git merge-base --is-ancestor $(git rev-parse ${{ github.ref }}) $(git rev-parse refs/remotes/origin/main); then
                        echo "Tag is from main branch"
                    else
                        echo "Tag is not from main branch"
                        exit 1
                    fi
    check-version-already-exist:
        runs-on: ubuntu-24.04
        steps:
            -   uses: actions/checkout@v4.1.1
            -   uses: ./.github/actions/setup_python_and_poetry
            -   name: Check if version already exists
                run: |
                    PACKAGE_VERSION=$(poetry version -s)
                    PACKAGE_INFO=$(curl -s https://pypi.org/pypi/dddesign/json)
                    if echo "$PACKAGE_INFO" | grep -q "\"$PACKAGE_VERSION\""; then
                        echo "Version $PACKAGE_VERSION already exists"
                        exit 1
                    else
                        echo "Version $PACKAGE_VERSION doesn't exists"
                    fi
    linters:
        runs-on: ubuntu-24.04
        strategy:
            matrix:
                command: [
                    "ruff . --config ruff.toml",
                    "ruff format . --check --config ruff.toml",
                    "mypy --config mypy.toml"
                ]
        steps:
            -   uses: actions/checkout@v4.1.1
            -   uses: ./.github/actions/setup_python_and_poetry
            -   uses: ./.github/actions/linters
                with:
                    command: ${{ matrix.command }}
    tests:
        runs-on: ubuntu-24.04
        strategy:
            matrix:
                python-version: [ "3.9", "3.10", "3.11", "3.12", "3.13", "3.14" ]
                pydantic-version: [ "2.1", "2.10", "2.11" ]
        steps:
            -   uses: actions/checkout@v4.1.1
            -   uses: ./.github/actions/setup_python_and_poetry
                with:
                    python-version: ${{ matrix.python-version }}
            -   uses: ./.github/actions/tests
                with:
                    pydantic-version: ${{ matrix.pydantic-version }}
    publish-package:
        runs-on: ubuntu-24.04
        needs:
            - check-tag-from-main-branch
            - check-version-already-exist
            - linters
            - tests
        environment:
            name: pypi
            url: https://pypi.org/p/dddesign
        permissions:
            contents: write
            id-token: write
        steps:
            -   uses: actions/checkout@v4.1.1
            -   uses: ./.github/actions/setup_python_and_poetry
            -   name: Build release distributions
                run: poetry build
            -   name: Publish release distributions
                uses: pypa/gh-action-pypi-publish@release/v1
            -   name: Sign the dists with Sigstore
                uses: sigstore/gh-action-sigstore-python@v3.0.0
                with:
                    inputs: >-
                        ./dist/*.tar.gz
                        ./dist/*.whl
            -   name: Create GitHub Release
                env:
                    GITHUB_TOKEN: ${{ github.token }}
                run: >-
                    gh release create
                    '${{ github.ref_name }}'
                    --repo '${{ github.repository }}'
                    --notes ""
            -   name: Upload artifact signatures to GitHub Release
                env:
                    GITHUB_TOKEN: ${{ github.token }}
                run: >-
                    gh release upload
                    '${{ github.ref_name }}' dist/**
                    --repo '${{ github.repository }}'
    upload-results-to-codecov:
        runs-on: ubuntu-24.04
        needs:
            - publish-package
        steps:
            -   uses: actions/checkout@v4.1.1
            -   uses: ./.github/actions/setup_python_and_poetry
            -   name: Install dependencies
                run: poetry install --with test
                shell: bash
            -   name: Tests
                run: pytest --cov=dddesign --cov-report=xml
                shell: bash
            -   name: Upload results to Codecov
                uses: codecov/codecov-action@v4
                with:
                    verbose: true
                    file: ./coverage.xml
                    flags: unittests
                    token: ${{ secrets.CODECOV_TOKEN }}
